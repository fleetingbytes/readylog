name: End-to-End Test

on:
  workflow_call:
    inputs:
      new-release-detected:
        required: true
        type: string
      distribution-artifacts-name:
        required: true
        type: string
      distribution-artifacts-dir:
        required: true
        type: string
      package-name:
        required: true
        type: string
      distribution-file-incipit:
        required: true
        type: string
      test-dependency-group:
        required: true
        type: string
      run-test-command:
        required: true
        type: string


jobs:
  test-e2e:
    name: End-to-End Test
    runs-on: ubuntu-latest
    env:
      APP_CONSOLE_LOG: "e2e-test-app-stderr.log"
      APP_FILE_LOG: "e2e-test-logfile.log"
      APP_FILE_LOG_ROOT: "e2e-test-logfile_root.log"
      APP_EXPECTED_LOG_LINES: 3
    steps:
      - !step
        name: Setup | Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          ref: ${{ github.sha }}
          fetch-depth: 1

      - !step
        name: Setup | Download Distribution Artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        if: ${{ inputs.new-release-detected == 'true' }}
        id: artifact-download
        with:
          name: ${{ inputs.distribution-artifacts-name }}
          path: ${{ inputs.distribution-artifacts-dir }}

      - !step
        name: Setup | Install Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # v6.0.0
        with:
          python-version-file: .python-version

      - !step
        name: Setup | Install uv
        uses: astral-sh/setup-uv@eb1897b8dc4b5d5bfe39a428a8f2304605e0983c  # v7.0.0
      - name: Setup | Install Project Dependencies for Test
        env:
          UV_NO_MANAGED_PYTHON: true
        run: uv sync --group ${{ inputs.test-dependency-group }}

      - name: Setup | Install distribution artifact
        if: ${{ steps.artifact-download.outcome == 'success' }}
        run: |
          uv pip uninstall ${{ inputs.package-name }}
          uv pip install ${{ inputs.distribution-artifacts-dir}}/${{ inputs.distribution-file-incipit }}-*.whl

      - name: Test | Run pytest
        run: ${{ inputs.run-test-command }}

      - name: Test | Run End-to-End App Test
        run: ./tests/e2e_test_app.py 2>"$APP_CONSOLE_LOG"

      - name: Test | Check End-to-End Test Results
        run: |
          cat "$APP_CONSOLE_LOG"
          echo "Lines in $APP_CONSOLE_LOG: $(wc -l < $APP_CONSOLE_LOG)"
          echo "Lines in $APP_FILE_LOG: $(wc -l < $APP_FILE_LOG)"
          echo "Size of $APP_FILE_LOG_ROOT: $(wc -c < $APP_FILE_LOG_ROOT)"
          if [ "$(wc -l < $APP_CONSOLE_LOG)" -eq $APP_EXPECTED_LOG_LINES ] && \
          [ "$(wc -l < $APP_FILE_LOG)" -eq $APP_EXPECTED_LOG_LINES ] && \
          [ ! -s "$APP_FILE_LOG_ROOT" ]; then
              echo "All checks passed."
          else
              echo "Test condition failed."
              exit 1
          fi
